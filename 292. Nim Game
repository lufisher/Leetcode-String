You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.

Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.

For example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.
//乍看之下这题似乎有点复杂，但是事实上只要找找规律就会发现，只要是4的倍数自己都会输，不是4的倍数都会赢
//这题不需要思考用递归等方法。事实上，也没法用递归，因为递归的情况是不唯一的，没法确定如何递归
class Solution {
public:
    bool canWinNim(int n) {
        return n%4;
    }
};
